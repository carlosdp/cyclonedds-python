# .github/workflows/build-cyclonedds-wheels.yml
name: build-cyclonedds-wheels
on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.run_attempt }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux (manylinux)
          - os: ubuntu-22.04
            platform: linux
            arch: x86_64
            cibw_build: cp312-manylinux_x86_64
            cibw_archs_linux: x86_64
          - os: ubuntu-22.04
            platform: linux
            arch: aarch64
            cibw_build: cp312-manylinux_aarch64
            cibw_archs_linux: aarch64
            qemu: true
          # macOS
          - os: macos-13
            platform: macos
            arch: x86_64
            cibw_build: cp312-macosx_x86_64
          - os: macos-14
            platform: macos
            arch: arm64
            cibw_build: cp312-macosx_arm64

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Enable QEMU for aarch64 (Linux)
        if: matrix.platform == 'linux' && matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: macOS build deps
        if: matrix.platform == 'macos'
        run: |
          brew update
          brew install cmake ninja

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install --upgrade pip cibuildwheel

      - name: Build wheel
        env:
          # Build exactly one wheel per job
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_SKIP: "musllinux_*"
          CIBW_BUILD_VERBOSITY: "1"

          # ensure the arch is allowed (needed for aarch64 on x86_64 runner)
          CIBW_ARCHS_LINUX: ${{ matrix.cibw_archs_linux || '' }}

          # Linux container pre-reqs (inside manylinux image) + ensure build dir exists
          CIBW_BEFORE_ALL_LINUX: |
            (yum -y install cmake ninja-build openssl-devel || dnf -y install cmake ninja-build openssl-devel) || true
            mkdir -p build

          # Optional: speed up native cmake builds
          CMAKE_BUILD_PARALLEL_LEVEL: "4"
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: Locate built wheel
        shell: bash
        run: |
          set -euo pipefail
          WHEEL_PATH=$(ls -1 wheelhouse/*.whl | head -n 1)
          echo "WHEEL_PATH=$WHEEL_PATH" >> $GITHUB_ENV
          echo "WHEEL_NAME=$(basename "$WHEEL_PATH")" >> $GITHUB_ENV
          echo "Found $WHEEL_PATH"

      - name: Upload wheel as its own artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WHEEL_NAME }}-${{ github.run_attempt }}
          path: ${{ env.WHEEL_PATH }}
          if-no-files-found: error
          compression-level: 0

